9.3.4

public class Building
{
    private double length;
    private double width;
    
    public Building(double l, double w){
        length = l;
        width = w;
    }
    
    public Building(){
        length = 0;
        width = 0;
    }
    public double getSize(){
        return length * width;
    }
}
public class House extends Building
{
    private int bedrooms;
    
    public House(int numBedrooms){
        bedrooms = numBedrooms;
    }
     public double getSize() {
        return bedrooms;
    }
    // Enter your code here
}
public class School extends Building
{
   private int numClasses;
   
   public School(int classrooms){
       numClasses = classrooms;
   }
    public double getSize() {
        return numClasses;
    }
   // Enter your code here
}
public class Tester
{
    public static void main(String[] args)
    {
        Building building = new Building(200, 300);
        School school = new School(85);
        House house = new House(4);
        
        System.out.println(building.getSize());
        System.out.println(school.getSize());
        System.out.println(house.getSize());
    }
}



9.3.5

public class Student extends Person
{
    private int grade;
    
    public Student(String name, int grade){
        super(name);
        this.grade = grade;
    }
    
    // Enter your code here
    public String toString() {
        return super.toString() + "\nGrade: " + grade;
    }
}


9.3.6

public class Car
{
    private String type;
    private double mpg;
    
    public Car(String type, double mpg){
        this.type = type;
        this. mpg = mpg;
    }
    
    public double getMPG(){
        return mpg;
    }
}

public class CarTester
{
    public static void main(String[] args)
    {
        Sedan clarity = new Sedan(52.7);
        Sedan bmw = new Sedan(22.6);
        
        System.out.println(clarity.efficient());
        System.out.println(bmw.efficient());
    }
}
public class Sedan extends Car {
    public Sedan(double mpg) {
        super("Sedan", mpg);
    }

    public boolean efficient() {
        return super.getMPG() > 30.0;
    }
}

9.3.7

public class Phone
{
    private boolean isSmart;
    
    public Phone(){
        isSmart = false;
    }
    
    public Phone(boolean isSmart){
        this.isSmart = isSmart;
    }
    
    public boolean smart(){
        return isSmart;
    }
}
public class PhoneTester {
    public static void main(String[] args) {
        Phone wall = new Phone();
        Phone desk = new Phone(true);
        SmartPhone iphone = new SmartPhone();

        printSmart(wall);
        printSmart(desk);
        printSmart(iphone);
    }

    // Overloaded method for Phone objects
    public static void printSmart(Phone phone) {
        System.out.println("false");
    }

    // Overloaded method for SmartPhone objects
    public static void printSmart(SmartPhone smartphone) {
System.out.println("true");    }
}
public class SmartPhone extends Phone
{
    public SmartPhone(){
        super(true);
    }
}

9.3.8
import java.util.*;

public class FoodTester
{
    public static void main(String[] args)
    {
        Food pizza = new Food("Pizza", 250);
        Fruit orange = new Fruit("Orange", 120, "orange");
        Meat hamburger = new Meat("Burger", 230, true);
        
        // Create an ArrayList and add all three onbject to it
         ArrayList<Food> foods = new ArrayList<>();
        foods.add(pizza);
        foods.add(orange);
        foods.add(hamburger);

        for (Food food : foods) {
            System.out.println(food);
        }
        // Loop through the array and print out the objects using the toString
    }
}

9.3.9
